// basic code to check pipelining in verilog
// 3-state operation
// S1: x1=A+B; x2=C-D
// S2: x3=x1+x2
// S3: x3*D;

// module description

module pipe1(F,A,B,C,D,clk);
  parameter X=10;
  input [X-1:0]A,B,C,D;
  input clk;
  output [X-1:0]F;
  
  reg [X-1:0]l12_x1,l12_x2,l12_d,l23_x3,l23_d,l34_f;
  
  assign F=l34_f;
  
  //stage 1
  always @(posedge clk)
    begin
      l12_x1 <= #4 A+B;
      l12_x2 <= #4 C-D;
      l12_d <= D;
    end
  //stage 2
  always @(posedge clk)
    begin
      l23_x3 <= #4 l12_x1 + l12_x2;
      l23_d <= l12_d;
    end
  //stage 3
  always @(posedge clk)
    l34_f <= #6 l23_x3 * l23_d;
endmodule

// testbench

module testpipe;
  reg [9:0]A,B,C,D;
  reg clk;
  wire [9:0]F;
  
  pipe1 MP(F,A,B,C,D,clk);
  
  initial clk=0;
  
  always #10 clk=~clk;
  
  initial 
    begin
      #5 A=12;B=23;C=8;D=6;
      #20 A=12;B=25;C=8;D=6;
      #20 A=10;B=23;C=8;D=6;
      #20 A=10;B=25;C=8;D=6;
      #20 A=15;B=25;C=9;D=6;
      #20 A=12;B=25;C=8;D=7;
      #20 A=12;B=25;C=10;D=6;
      #20 A=12;B=25;C=0;D=7;
      #20 A=15;B=15;C=8;D=6;
      #20 A=12;B=25;C=15;D=6;
      #20 A=30;B=1;C=8;D=0;
      #20 A=12;B=8;C=8;D=6;
    end
  
  initial
    begin
      $dumpfile("design.vcd");
      $dumpvars(0,testpipe);
      $monitor($time," F=%d",F);
      #300 $finish;
    end
endmodule
